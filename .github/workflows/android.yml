name: Android CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [ core, data, domain, favorite, movie, tv ]
        api-level: [ 30 ]
        target: [ android-30 ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: true  # Incluye submÃ³dulos en la descarga si es necesario

      - name: Set Up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ${{ matrix.module }}/build/
          key: gradle-${{ runner.os }}-${{ matrix.module }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-${{ matrix.module }}-

      - name: Set Up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          components: build-tools-30.0.2

      - name: Create Secrets Properties File
        run: |
          echo "Creating secrets.properties file..."
          echo "API_KEY=${{ secrets.API_KEY }}" > $GITHUB_WORKSPACE/secrets.properties

      - name: Lint Code for Module
        run: |
          echo "Running lint for module: ${{ matrix.module }}..."
          ./gradlew :${{ matrix.module }}:lint

      - name: Static Code Analysis (Detekt)
        run: |
          echo "Running Detekt static code analysis for module: ${{ matrix.module }}..."
          ./gradlew :${{ matrix.module }}:detekt

      - name: Run Unit Tests for Module
        run: |
          echo "Running unit tests for module: ${{ matrix.module }}..."
          ./gradlew :${{ matrix.module }}:testDebugUnitTest -PsecretFile=$GITHUB_WORKSPACE/secrets.properties

      - name: Generate JaCoCo Coverage Report
        run: |
          echo "Generating JaCoCo coverage report for module: ${{ matrix.module }}..."
          ./gradlew :${{ matrix.module }}:jacocoTestReport -PsecretFile=$GITHUB_WORKSPACE/secrets.properties

      - name: Verify JaCoCo Coverage
        run: |
          echo "Checking JaCoCo coverage thresholds for module: ${{ matrix.module }}..."
          ./gradlew :${{ matrix.module }}:jacocoTestCoverageVerification -PsecretFile=$GITHUB_WORKSPACE/secrets.properties

      - name: Clean Up JaCoCo Reports
        run: |
          echo "Deleting JaCoCo reports for module: ${{ matrix.module }}..."
          rm -rf ${{ matrix.module }}/build/reports/jacoco/

      - name: Build APK
        run: |
          echo "Building APK for app module..."
          ./gradlew :app:assembleDebug -PsecretFile=$GITHUB_WORKSPACE/secrets.properties

      - name: Find APK Path
        run: |
          APK_PATH=$(find app/build/outputs/apk/debug/ -name "*.apk")
          echo "APK generated at: $APK_PATH"
