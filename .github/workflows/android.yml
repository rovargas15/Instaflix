name: Android CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and Test
        env:
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          SECRET_FILE="secrets.properties"
          APK_DIR="app/build/outputs/apk/debug/"
          APK_NAME="app-debug-$(date +%Y%m%d%H%M%S).apk"
          APK_PATH="$APK_DIR$APK_NAME"

          # Crear archivo de secretos si no existe
          if [ ! -f "$SECRET_FILE" ]; then
            echo "API_KEY=$API_KEY" > $SECRET_FILE
          fi

          # Ejecutar lint, an√°lisis est√°tico, pruebas, informes de cobertura
          for module in core data domain movie tv favorite; do
            echo "üîç Analizando m√≥dulo: $module"

            echo "üìã Ejecutando lint en $module..."
            ./gradlew :"$module":lint || exit 1

            echo "üîé Ejecutando an√°lisis est√°tico (Detekt) en $module..."
            ./gradlew :"$module":detekt || exit 1

            echo "üß™ Ejecutando pruebas unitarias en $module..."
            ./gradlew :"$module":testDebugUnitTest -PsecretFile=$SECRET_FILE || exit 1

            echo "üìà Generando informe de cobertura en $module..."
            ./gradlew :"$module":jacocoTestReport -PsecretFile=$SECRET_FILE || exit 1

            echo "‚úÖ Verificando cobertura de c√≥digo en $module..."
            ./gradlew :"$module":jacocoTestCoverageVerification -PsecretFile=$SECRET_FILE || exit 1

            echo "üßπ Limpiando informes de cobertura de JaCoCo para $module..."
            rm -rf "$module"/build/reports/jacoco/
          done

          # Compilar y generar la APK del m√≥dulo principal
          echo "üî® Compilando y generando la APK del proyecto..."
          ./gradlew :app:assembleDebug -PsecretFile=$SECRET_FILE || exit 1

          # Renombrar la APK generada
          if [ -f "$APK_DIR/app-debug.apk" ]; then
            mv "$APK_DIR/app-debug.apk" "$APK_PATH"
            echo "‚úÖ APK generada y renombrada a: $APK_NAME"
          else
            echo "‚ùå No se encontr√≥ la APK generada. Revisa el proceso de compilaci√≥n."
            exit 1
          fi

          # Limpiar el archivo de secretos si no exist√≠a antes
          if [ ! -f "$SECRET_FILE" ]; then
            rm $SECRET_FILE
            echo "üßπ Archivo de secretos ($SECRET_FILE) eliminado."
          fi

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: $APK_PATH

      - name: Cleanup
        run: |
          echo "üéâ Validaci√≥n CI completada exitosamente."
