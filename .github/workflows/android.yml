name: Android CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      gradle-cache-key: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create secrets.properties
        run: echo "ext { API_KEY = 'themoviedb_key' }" > $GITHUB_WORKSPACE/secrets.properties

      - name: Insert API_KEY from GitHub Secrets
        run: sed -i "s/themoviedb_key/${{ secrets.API_KEY }}/g" $GITHUB_WORKSPACE/secrets.properties

      - name: Verify and Set Permissions for gradlew (Optional)  # Added step
        run: |
          if [ ! -f ./gradlew ]; then
              echo "gradlew file not found. Please ensure it exists in your project's root directory."
              exit 1
            fi
            chmod +x ./gradlew

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        module: [ core, data, domain, favorite, movie, tv ]
    steps:
      - name: Build with Gradle
        run: ./gradlew :${{ matrix.module }}:build

