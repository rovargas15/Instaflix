name: Android CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Persist workspace
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}
          key: ${{ runner.os }}-secrets-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-secrets- 

  analysis-and-test:
    needs: [ build ]
    name: Analysis y Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Create secrets.properties
        run: echo echo "ext { API_KEY = 'themoviedb_key' }" > $GITHUB_WORKSPACE/secrets.properties

      - name: Insert API_KEY from GitHub Secrets
        run: sed -i "s/themoviedb_key/${{ secrets.API_KEY }}/g" $GITHUB_WORKSPACE/secrets.properties

      - name: Show content of secrets.properties
        run: |
          echo "Content of secrets.properties:"
          cat $GITHUB_WORKSPACE/secrets.properties

      - name: Run unit tests
        run: |
          echo "Running unit tests..."
          ./gradlew test --stacktrace

          echo "ðŸ§ª Ejecutando pruebas unitarias..."
          ./gradlew test || exit 1


      - name: Run lint
        run: |
          echo "Running lint for..."
          ./gradlew lint

          echo "ðŸ“‹ Ejecutando lint en $module..."
            ./gradlew lint || exit 1


      - name: Run Detekt
        run: |
          echo "Running Detekt static code analysis..."
          ./gradlew detekt

          echo "ðŸ”Ž Ejecutando anÃ¡lisis estÃ¡tico (Detekt)..."
          ./gradlew detekt || exit 1



  coverage:
    needs: [ analysis-and-test ]
    name: Coverage jacoco
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Create secrets.properties
        run: echo echo "ext { API_KEY = 'themoviedb_key' }" > $GITHUB_WORKSPACE/secrets.properties

      - name: Insert API_KEY from GitHub Secrets
        run: sed -i "s/themoviedb_key/${{ secrets.API_KEY }}/g" $GITHUB_WORKSPACE/secrets.properties

      - name: Generate JaCoCo Coverage Report
        run: |
          echo "ðŸ“ˆ Generando informe de cobertura..."
          ./gradlew :jacocoTestReport || exit 1

          echo "âœ… Verificando cobertura de cÃ³digo..."
          ./gradlew jacocoTestCoverageVerification  || exit 1


  build-and-deploy:
    needs: [ coverage ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Create secrets.properties
        run: echo echo "ext { API_KEY = 'themoviedb_key' }" > $GITHUB_WORKSPACE/secrets.properties

      - name: Insert API_KEY from GitHub Secrets
        run: sed -i "s/themoviedb_key/${{ secrets.API_KEY }}/g" $GITHUB_WORKSPACE/secrets.properties

      - name: Build APK
        run: |
          echo "Building APK for app module..."
          ./gradlew app:assembleDebug
          echo "ðŸŽ‰ ValidaciÃ³n CI completada exitosamente."