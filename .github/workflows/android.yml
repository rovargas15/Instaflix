name: Android CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      gradle-cache-key: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create secrets.properties
        run: echo "ext { API_KEY = 'themoviedb_key' }" > $GITHUB_WORKSPACE/secrets.properties

      - name: Insert API_KEY from GitHub Secrets
        run: sed -i "s/themoviedb_key/${{ secrets.API_KEY }}/g" $GITHUB_WORKSPACE/secrets.properties

      - name: Verify and Set Permissions for gradlew
        run: |
          if [ ! -f ./gradlew ]; then
              echo "gradlew file not found. Please ensure it exists in your project's root directory."
              exit 1
          fi
          chmod +x ./gradlew


  build-core:
    name: Build Core Module
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build Core with Gradle
        run: ./gradlew :core:build

  build-data:
    name: Build Data Module
    runs-on: ubuntu-latest
    needs: build-core
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build Data with Gradle
        run: ./gradlew :data:build

  build-domain:
    name: Build Domain Module
    runs-on: ubuntu-latest
    needs: build-data
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build Domain with Gradle
        run: ./gradlew :domain:build

  build-favorite:
    name: Build favorite Module
    runs-on: ubuntu-latest
    needs: build-data
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build favorite with Gradle
        run: ./gradlew :favorite:build

  build-movie:
    name: Build movie Module
    runs-on: ubuntu-latest
    needs: build-data
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build movie with Gradle
        run: ./gradlew :movie:build

  build-tv:
    name: Build tv Module
    runs-on: ubuntu-latest
    needs: build-data
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build tv with Gradle
        run: ./gradlew :tv:build

  build:
    name: Build APK
    runs-on: ubuntu-latest
    needs: [setup, build-core, build-data, build-domain, build-favorite, build-movie, build-tv]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build APK
        run: ./gradlew :app:assembleDebug
